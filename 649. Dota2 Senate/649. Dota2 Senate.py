import copy
from typing import List

class Solution:
    def predictPartyVictory(self, senate: str) -> str:

        senateArr = list(senate)
        hasDiff = True

        while len(senateArr) > 1 and hasDiff:

            index = 0
            nextIndex = index + 1
            while index < len(senateArr) and hasDiff:
                hasDiff = False

                for _nextIndex in (list(range(nextIndex, len(senateArr))) + list(range(0, index))):
                    if senateArr[index] != senateArr[_nextIndex]:
                        hasDiff = True
                        senateArr.pop(_nextIndex)
                        nextIndex = _nextIndex
                        break
                    else:
                        continue

                index = index + 1

        if senateArr[0] == "R":
            return "Radiant"
        else:
            return "Dire"

senate = "RDRDDRRRDDDDRRDRDDDDRRRRRDDDDDDRDRRRDRRRDRRDRDRRRDRRDRDRRDRRDDDRDRRRRDDRRRDRDRDRDDRRDRRDDRDRRRDRRDRRRDDRDDDDRRDDDDDDRDRRRDRDRDDDDRDRRRDDRRRDRDDRDRRDRDDRDDRRDRRRDRDDDRRRRRDRDDRRRRDRRDRDDRRRDDDRDDDRDRRRDRRDRDRRRRRDRDRRDDRDRRDRRDDDRDRRRDRDRRRRRRDRDDDDRRDRDDRRDDDDDRDDDRRDDRDDRDRRRDRDDRDDDDRDDDDDRRRDDDRRDRDRRRDDDDDRRDDRRDDDRRDRDDDRRDRDRDRRRRDRDRDDDRDRRDDDRDRDDRDDRDDRDDRDDRRDRRRRDRDRRDRRRRRDDDRDRRDDDRRRDDDDDRDDRDRRRDDRRRRDRRDRDRRDDDRDRRDRDRDRDDDRRDRRRDDRDDRRRRDRDDRRRRRDDRDRRRRRDRDDRDRRRDRRRRRDRRRDDRDDDRRRDDDRDRRDDRRDRRDRDRRRDRDDDDRDRRDDRRRRRDDDRDDDRRDDRRRDRDRRDRRRDRDRRDDRRRRRDDDDRDRDRDRDDDDDRDRDRRDDDRRDDDRRDDDDRDDDRDDRRDRDRDRRDRRRRDRDRRRDRRRDDRDDRRRRDDDDDRDDDRRRRDRDRRRRRDRDRDRRRRDRDDRDRRRDDDRDRRRDRRDRDRDRDRDDDDDDRDDRRRRRDDDRRDRRDRDRDDRRDRRRRDDRDRDDDDRDRDDRDRDDRDRDRRDDRRRRRRRRDDRRRDDRDRRRDDDRDRRDDDDDDRDRRRRDRDDRDRDRRRRRDDRRDRRRRDRRRRRDRRDDRDDRRDDDRDRRRRDDRDRDRRDRRDRRRRDDRDDRDDRDRDDRDRRRDRDDDDDDDRRRRDDDRRDRRRRDRRRRDDRRRDDDDRRRDRDRRRRDDDRRDRRDDRDRDRDRDRRRDRRDDRRRDRRRDRRRRRDRRDDRRDDRDDDDRDDRRRRDRRRDDRRRRRDDRDRRRDRRDRRDRDDRDRRRDRDRDDRDRDRRDRRRDRRRRDRRRRRRDRDDDDRRRDRDDRRRDDRRDDDDDDRDDDRRDDRDDRDRRDDRDRDDRRDRDRDDDRRRRRDDRDDDDDRDDDRRRRRRDRDDDDDDDDRDDRRDDDRDDDRRDDDDRRRDDDRDDDDRDRDDRDRDDDDDDRRRRDDRDDDDDDRDRDRRRDDRRRRRRDDDRRRDDRRDRRRDRRDDDDDDRRDDRDDDRRRRRRDRDDRRRRDDDRDDRDDDRDRRRRDDDRRDRDRDDRRDRRDRRRRRDDRRDDRRRDDRRRRDDRRDRDDRDDDRRRDRRRDDDDRRRRDDDRRDDRDRDRRRDDDDRRRRDRRRDDRDRRRRRRDRDDRDDRDRDDRRRRDRRRDDDRDDRRRDDRRRDDRDRDRRRRDDDDDRRRRDRRRDRRRDRDRDRDRRDRDRRDDDRDRDRDRRDRDRRRRDDDDRDDRDDRDRDRDRRDDDDRRRDDRRDRRDDRRRRRDRRRDRRDRDDDRDDRRRRRRDDRRDDRRDRDRRDDDDDDDRRRRRDRRRRDDDRRDDRRRDRDRDRDRRRRDRDRDDRRDRRDRRRRDRDRDDDDRRDRRRRRDRRRRRRDDDDRDDDDRDDDRDDRRRDRDRDDRDRDDRRDDDRRRDDDRDRRRRDRDRRRRDRRRRDDRDRRRRDRDDRDRDDRRDDDDRDDDRRDRDDRDDRDRDRRDDRRRRRRDRDRDRRRDRRRDRDRRDDDRDDRRDDDDDRRRRRRDDDDDRRDDRRRRRDDRRRDRDRDRRRRDDDDRDRRDRDDRRDRRRDRRRRDRRDDRRDRDRDRRRDDRRRRRDDRDRRDDRDDDRDDDDDDRDRRRDRDRDRRRRRDRDRRRRRRRRRDRRRDDRDRRRDRDRDRDDDDDDDDDDDRDRDDRRDDDRDRDRDDRRRDRRDRDRDRDRRDRDDRRRRRDDRDDDDRDRRRDDDDRRDDRRDRDDDRDDRRRRDDDDDDRDRRRDRDDRRRRRRDDRDRRDRDRRDRDRRRRDRDDDDRRRDRRDRDDDDDRRRRRRRRRDDDRRDRDRRRDDDDRRRRDDRRRDRDDDRDRDDRDRDRDDDRDRRDDRRDRRRRRDDDRRDRDDRRRDDRRDDDRRRDRRDRRDRDDDRRRRDRDDDRDDRRDRRDRDRRRRRDRRRDRDRDRRRDRRRDRRDDDDRRDRRRDRRDDRDRRRDDDDRRRRDRRRDRDRDRRDRRDRDDRRDDDDRDDRDRDDDDRRDDDRDDRDDDRDDDRDRDRDDRDRDRRDDDDRDRRRRDRDRDDRDDRDRDRDRRRRDDRDRDDRRRDRRRDDRDDRRDDRRDRDRRDDRDDDDRRRDRDRDRRDRDRDRRDRRDDRDRRDDRDDDRRDDDDDDRDDRDDDDDRDRRDDDDDRDRDRDRRDDDRRDDRRRDDDRDRRDDDDDDDRDRRDRRRDRRRRDDRRRDRDDRDRDRDDRDRRRDRDRDRRDRRRDRRRDDDRRRRRDRRDDRDDDDRDRDRRRRRDDDDRRDDRDRDRRRDDRDDRDRDRDDDRRDRRDDRDRDDRRDRDDDDRDRDDDDRDDRDRRDRDDRRRRDDDRRRRRDDRDRDDDRDRRDDDRRDRDDRDRRRRRDRDRRDDRDDRDRDRRDDRDDRRDRDDDDDRDDDRRDDDRDRRRRRRRDRRRDDDDDDRDRDDDDDRRDRDDDDDRRRDRDDRRRDDDDDDDRDRDRDDRRRRDDDDDDDRDDRRRRRDRRDDDDRDRDRDDRRDDRDDRDRDRRRRDRRRRRDDDRDDRDRDDRDDRDRRDRRRRRRRRRDRRDRDRRRRRRDRDRDRDRDRDDDDRRDRRDRRDDRRDRRRRDRDDRDDDDDRRDDRDRDDRRDRRRDRDRDDRRDRDRRDRDRRRRDRRDDDDRDDRRRRRRDDDRRRRDDDRRDRRRDDDDDDDRRDRDDRDRRRRDRRDDDRDRDRRRRRDDRRRDRRDRRRDRDDDRDRDRRDRDDDRRRRDRRRDRRRDRRDDRDRDDRRDRRRRDRRDRRDDDRRDDRRDRRRDDRDDDRRRRDRRDRDRRDRRRRRDDRDDRRRRDRDDRRDRDDRDDDDDRRRDRRDDDDRRDDDRRDDRDRDRRRDDDRRRRRRDDDDRDDDDDDRRRDDRDRDRDRRRDDDRRRDDDRRRRRDRDRDDRDDD"
import time
start_time = time.time()

print(Solution().predictPartyVictory(senate))

print("--- %s seconds ---" % (time.time() - start_time))
